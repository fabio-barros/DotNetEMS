// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Models;

namespace server.Migrations
{
    [DbContext(typeof(EmsContext))]
    [Migration("20210521120424_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Portuguese_Brazil.1252")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("server.Models.Cargo", b =>
                {
                    b.Property<int>("FunNum")
                        .HasColumnType("integer")
                        .HasColumnName("fun_num");

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("titulo");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("date")
                        .HasColumnName("inicio");

                    b.Property<DateTime?>("Termino")
                        .HasColumnType("date")
                        .HasColumnName("termino");

                    b.HasKey("FunNum", "Titulo", "Inicio")
                        .HasName("cargos_pkey");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("server.Models.DeparFunc", b =>
                {
                    b.Property<int>("FunNum")
                        .HasColumnType("integer")
                        .HasColumnName("fun_num");

                    b.Property<string>("DeparNum")
                        .HasMaxLength(4)
                        .HasColumnType("character(4)")
                        .HasColumnName("depar_num")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("date")
                        .HasColumnName("inicio");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("date")
                        .HasColumnName("termino");

                    b.HasKey("FunNum", "DeparNum")
                        .HasName("depar_func_pkey");

                    b.HasIndex(new[] { "DeparNum" }, "depar_fun_depar_num_idx");

                    b.ToTable("depar_func");
                });

            modelBuilder.Entity("server.Models.DeparGeren", b =>
                {
                    b.Property<string>("DeparNum")
                        .HasMaxLength(4)
                        .HasColumnType("character(4)")
                        .HasColumnName("depar_num")
                        .IsFixedLength(true);

                    b.Property<int>("FunNum")
                        .HasColumnType("integer")
                        .HasColumnName("fun_num");

                    b.Property<DateTime>("Incio")
                        .HasColumnType("date")
                        .HasColumnName("incio");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("date")
                        .HasColumnName("termino");

                    b.HasKey("DeparNum", "FunNum")
                        .HasName("depar_geren_pkey");

                    b.HasIndex("FunNum");

                    b.HasIndex(new[] { "DeparNum" }, "func_num_depar_num_idx");

                    b.ToTable("depar_geren");
                });

            modelBuilder.Entity("server.Models.Departamento", b =>
                {
                    b.Property<string>("DeparNum")
                        .HasMaxLength(4)
                        .HasColumnType("character(4)")
                        .HasColumnName("depar_num")
                        .IsFixedLength(true);

                    b.Property<string>("DeparNome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("depar_nome");

                    b.HasKey("DeparNum")
                        .HasName("departamentos_pkey");

                    b.HasIndex(new[] { "DeparNome" }, "departamentos_depar_nome_key")
                        .IsUnique();

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("server.Models.Funcionario", b =>
                {
                    b.Property<int>("FunNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fun_num")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("date")
                        .HasColumnName("data_contratacao");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("genero");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("sobrenome");

                    b.HasKey("FunNum")
                        .HasName("funcionarios_pkey");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("server.Models.Salario", b =>
                {
                    b.Property<int>("FunNum")
                        .HasColumnType("integer")
                        .HasColumnName("fun_num");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("date")
                        .HasColumnName("inicio");

                    b.Property<decimal>("Salario1")
                        .HasColumnType("numeric")
                        .HasColumnName("salario");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("date")
                        .HasColumnName("termino");

                    b.HasKey("FunNum", "Inicio")
                        .HasName("salarios_pkey");

                    b.ToTable("salarios");
                });

            modelBuilder.Entity("server.Models.Cargo", b =>
                {
                    b.HasOne("server.Models.Funcionario", "FunNumNavigation")
                        .WithMany("Cargos")
                        .HasForeignKey("FunNum")
                        .HasConstraintName("cargos_fun_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunNumNavigation");
                });

            modelBuilder.Entity("server.Models.DeparFunc", b =>
                {
                    b.HasOne("server.Models.Departamento", "DeparNumNavigation")
                        .WithMany("DeparFuncs")
                        .HasForeignKey("DeparNum")
                        .HasConstraintName("depar_func_depar_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Funcionario", "FunNumNavigation")
                        .WithMany("DeparFuncs")
                        .HasForeignKey("FunNum")
                        .HasConstraintName("depar_func_fun_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeparNumNavigation");

                    b.Navigation("FunNumNavigation");
                });

            modelBuilder.Entity("server.Models.DeparGeren", b =>
                {
                    b.HasOne("server.Models.Departamento", "DeparNumNavigation")
                        .WithMany("DeparGerens")
                        .HasForeignKey("DeparNum")
                        .HasConstraintName("depar_geren_depar_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Funcionario", "FunNumNavigation")
                        .WithMany("DeparGerens")
                        .HasForeignKey("FunNum")
                        .HasConstraintName("depar_geren_fun_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeparNumNavigation");

                    b.Navigation("FunNumNavigation");
                });

            modelBuilder.Entity("server.Models.Salario", b =>
                {
                    b.HasOne("server.Models.Funcionario", "FunNumNavigation")
                        .WithMany("Salarios")
                        .HasForeignKey("FunNum")
                        .HasConstraintName("salarios_fun_num_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunNumNavigation");
                });

            modelBuilder.Entity("server.Models.Departamento", b =>
                {
                    b.Navigation("DeparFuncs");

                    b.Navigation("DeparGerens");
                });

            modelBuilder.Entity("server.Models.Funcionario", b =>
                {
                    b.Navigation("Cargos");

                    b.Navigation("DeparFuncs");

                    b.Navigation("DeparGerens");

                    b.Navigation("Salarios");
                });
#pragma warning restore 612, 618
        }
    }
}
